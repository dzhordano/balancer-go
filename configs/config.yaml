http_server:
  host: "localhost"
  port: 8080

https_server:
  host: "localhost"
  port: 8443
  cert_file: "server.crt"
  key_file: "server.key"

servers:
  # specify servers that balancer will connect to
  - url: "localhost:8081"
    weight: 1 # represents the weight of the server (optional. default: 1)
  - url: "localhost:8082"
    weight: 2
  - url: "localhost:8083"
    weight: 3
  # - url: "localhost:8084"
  #   weight: 4
  # - url: "localhost:8085"
  #   weight: 5
  # - url: "localhost:8086"
  #   weight: 1
  # - url: "localhost:8087"
  #   weight: 1
  # - url: "localhost:8088"
  #   weight: 1
  # - url: "localhost:8089"
  #   weight: 1
  # - url: "localhost:8090"
  #   weight: 1

balancing_alg: "round_robin" # choose balancing algorithm (algs: round_robin, weighted_round_robin, least_connections, hash, random)

health_check:
  interval: 5s
  timeout: 2s

logging:
  rewrite: true # Перезаписывать ли логи при каждом запуске приложения.
  level: "info" # Уровень логирования.
  path: "logs/" # Путь к файлу логирования.
  file: "server.log" # Имя файла логирования.

servers_outage:    # Используется для имитации сбоя работы серверов.
  after: -1       # Время в секундах (целое число), через которое будет происходить сбой. Установить -1 для отключения имитации.
  multiplier: 1.2  # Коэффициент увеличения времени сбоя. Увеличивается каждый раз после предыдущего сбоя.